package statistics.inferential

/**
*  Created by inieto on 06/06/15.
*/

import statistics.ImplicitOperators
import statistics.descriptive.Stats

import scala.collection.immutable.SortedMap

object Student {

  import ImplicitOperators._

  /** Estadistica Inferencial (Variables Aleatorias) */

  //Devuelve la tupla (min,Max) tal que P(min < m < Max) = 1-α
  def confidenceInterval(values: List[Double], α : Double): (Double,Double) = {
    val Ῡ = Stats.Estimators.Ῡ(values)
    val `S²` = Stats.Estimators.`S²`(values)
    val n = values.size
    confidenceInterval(Ῡ, `S²`, n, α)
  }

  def confidenceInterval(Ῡ: Double, `S²`: Double, n: Int, α : Double): (Double, Double) = {
    val tc = tIndex(n-1, α/2)
    (Ῡ - tc * √(`S²`) / √(n), Ῡ + tc * √(`S²`) / √(n))
  }

  //Fisher-Student (n-1)
  private val distribution: SortedMap[Int,SortedMap[Double,Double]] = SortedMap(
    //source: http://www.itl.nist.gov/div898/handbook/eda/section3/eda3672.htm
    1  -> SortedMap(0.100 -> 3.078, 0.050 -> 6.314, 0.025 ->12.706, 0.010 ->31.821, 0.005 ->63.657, 0.001->318.313),
    2  -> SortedMap(0.100 -> 1.886, 0.050 -> 2.920, 0.025 -> 4.303, 0.010 -> 6.965, 0.005 -> 9.925, 0.001 ->22.327),
    3  -> SortedMap(0.100 -> 1.638, 0.050 -> 2.353, 0.025 -> 3.182, 0.010 -> 4.541, 0.005 -> 5.841, 0.001 ->10.215),
    4  -> SortedMap(0.100 -> 1.533, 0.050 -> 2.132, 0.025 -> 2.776, 0.010 -> 3.747, 0.005 -> 4.604, 0.001 -> 7.173),
    5  -> SortedMap(0.100 -> 1.476, 0.050 -> 2.015, 0.025 -> 2.571, 0.010 -> 3.365, 0.005 -> 4.032, 0.001 -> 5.893),
    6  -> SortedMap(0.100 -> 1.440, 0.050 -> 1.943, 0.025 -> 2.447, 0.010 -> 3.143, 0.005 -> 3.707, 0.001 -> 5.208),
    7  -> SortedMap(0.100 -> 1.415, 0.050 -> 1.895, 0.025 -> 2.365, 0.010 -> 2.998, 0.005 -> 3.499, 0.001 -> 4.782),
    8  -> SortedMap(0.100 -> 1.397, 0.050 -> 1.860, 0.025 -> 2.306, 0.010 -> 2.896, 0.005 -> 3.355, 0.001 -> 4.499),
    9  -> SortedMap(0.100 -> 1.383, 0.050 -> 1.833, 0.025 -> 2.262, 0.010 -> 2.821, 0.005 -> 3.250, 0.001 -> 4.296),
    10 -> SortedMap(0.100 -> 1.372, 0.050 -> 1.812, 0.025 -> 2.228, 0.010 -> 2.764, 0.005 -> 3.169, 0.001 -> 4.143),
    11 -> SortedMap(0.100 -> 1.363, 0.050 -> 1.796, 0.025 -> 2.201, 0.010 -> 2.718, 0.005 -> 3.106, 0.001 -> 4.024),
    12 -> SortedMap(0.100 -> 1.356, 0.050 -> 1.782, 0.025 -> 2.179, 0.010 -> 2.681, 0.005 -> 3.055, 0.001 -> 3.929),
    13 -> SortedMap(0.100 -> 1.350, 0.050 -> 1.771, 0.025 -> 2.160, 0.010 -> 2.650, 0.005 -> 3.012, 0.001 -> 3.852),
    14 -> SortedMap(0.100 -> 1.345, 0.050 -> 1.761, 0.025 -> 2.145, 0.010 -> 2.624, 0.005 -> 2.977, 0.001 -> 3.787),
    15 -> SortedMap(0.100 -> 1.341, 0.050 -> 1.753, 0.025 -> 2.131, 0.010 -> 2.602, 0.005 -> 2.947, 0.001 -> 3.733),
    16 -> SortedMap(0.100 -> 1.337, 0.050 -> 1.746, 0.025 -> 2.120, 0.010 -> 2.583, 0.005 -> 2.921, 0.001 -> 3.686),
    17 -> SortedMap(0.100 -> 1.333, 0.050 -> 1.740, 0.025 -> 2.110, 0.010 -> 2.567, 0.005 -> 2.898, 0.001 -> 3.646),
    18 -> SortedMap(0.100 -> 1.330, 0.050 -> 1.734, 0.025 -> 2.101, 0.010 -> 2.552, 0.005 -> 2.878, 0.001 -> 3.610),
    19 -> SortedMap(0.100 -> 1.328, 0.050 -> 1.729, 0.025 -> 2.093, 0.010 -> 2.539, 0.005 -> 2.861, 0.001 -> 3.579),
    20 -> SortedMap(0.100 -> 1.325, 0.050 -> 1.725, 0.025 -> 2.086, 0.010 -> 2.528, 0.005 -> 2.845, 0.001 -> 3.552),
    21 -> SortedMap(0.100 -> 1.323, 0.050 -> 1.721, 0.025 -> 2.080, 0.010 -> 2.518, 0.005 -> 2.831, 0.001 -> 3.527),
    22 -> SortedMap(0.100 -> 1.321, 0.050 -> 1.717, 0.025 -> 2.074, 0.010 -> 2.508, 0.005 -> 2.819, 0.001 -> 3.505),
    23 -> SortedMap(0.100 -> 1.319, 0.050 -> 1.714, 0.025 -> 2.069, 0.010 -> 2.500, 0.005 -> 2.807, 0.001 -> 3.485),
    24 -> SortedMap(0.100 -> 1.318, 0.050 -> 1.711, 0.025 -> 2.064, 0.010 -> 2.492, 0.005 -> 2.797, 0.001 -> 3.467),
    25 -> SortedMap(0.100 -> 1.316, 0.050 -> 1.708, 0.025 -> 2.060, 0.010 -> 2.485, 0.005 -> 2.787, 0.001 -> 3.450),
    26 -> SortedMap(0.100 -> 1.315, 0.050 -> 1.706, 0.025 -> 2.056, 0.010 -> 2.479, 0.005 -> 2.779, 0.001 -> 3.435),
    27 -> SortedMap(0.100 -> 1.314, 0.050 -> 1.703, 0.025 -> 2.052, 0.010 -> 2.473, 0.005 -> 2.771, 0.001 -> 3.421),
    28 -> SortedMap(0.100 -> 1.313, 0.050 -> 1.701, 0.025 -> 2.048, 0.010 -> 2.467, 0.005 -> 2.763, 0.001 -> 3.408),
    29 -> SortedMap(0.100 -> 1.311, 0.050 -> 1.699, 0.025 -> 2.045, 0.010 -> 2.462, 0.005 -> 2.756, 0.001 -> 3.396),
    30 -> SortedMap(0.100 -> 1.310, 0.050 -> 1.697, 0.025 -> 2.042, 0.010 -> 2.457, 0.005 -> 2.750, 0.001 -> 3.385),
    31 -> SortedMap(0.100 -> 1.309, 0.050 -> 1.696, 0.025 -> 2.040, 0.010 -> 2.453, 0.005 -> 2.744, 0.001 -> 3.375),
    32 -> SortedMap(0.100 -> 1.309, 0.050 -> 1.694, 0.025 -> 2.037, 0.010 -> 2.449, 0.005 -> 2.738, 0.001 -> 3.365),
    33 -> SortedMap(0.100 -> 1.308, 0.050 -> 1.692, 0.025 -> 2.035, 0.010 -> 2.445, 0.005 -> 2.733, 0.001 -> 3.356),
    34 -> SortedMap(0.100 -> 1.307, 0.050 -> 1.691, 0.025 -> 2.032, 0.010 -> 2.441, 0.005 -> 2.728, 0.001 -> 3.348),
    35 -> SortedMap(0.100 -> 1.306, 0.050 -> 1.690, 0.025 -> 2.030, 0.010 -> 2.438, 0.005 -> 2.724, 0.001 -> 3.340),
    36 -> SortedMap(0.100 -> 1.306, 0.050 -> 1.688, 0.025 -> 2.028, 0.010 -> 2.434, 0.005 -> 2.719, 0.001 -> 3.333),
    37 -> SortedMap(0.100 -> 1.305, 0.050 -> 1.687, 0.025 -> 2.026, 0.010 -> 2.431, 0.005 -> 2.715, 0.001 -> 3.326),
    38 -> SortedMap(0.100 -> 1.304, 0.050 -> 1.686, 0.025 -> 2.024, 0.010 -> 2.429, 0.005 -> 2.712, 0.001 -> 3.319),
    39 -> SortedMap(0.100 -> 1.304, 0.050 -> 1.685, 0.025 -> 2.023, 0.010 -> 2.426, 0.005 -> 2.708, 0.001 -> 3.313),
    40 -> SortedMap(0.100 -> 1.303, 0.050 -> 1.684, 0.025 -> 2.021, 0.010 -> 2.423, 0.005 -> 2.704, 0.001 -> 3.307),
    41 -> SortedMap(0.100 -> 1.303, 0.050 -> 1.683, 0.025 -> 2.020, 0.010 -> 2.421, 0.005 -> 2.701, 0.001 -> 3.301),
    42 -> SortedMap(0.100 -> 1.302, 0.050 -> 1.682, 0.025 -> 2.018, 0.010 -> 2.418, 0.005 -> 2.698, 0.001 -> 3.296),
    43 -> SortedMap(0.100 -> 1.302, 0.050 -> 1.681, 0.025 -> 2.017, 0.010 -> 2.416, 0.005 -> 2.695, 0.001 -> 3.291),
    44 -> SortedMap(0.100 -> 1.301, 0.050 -> 1.680, 0.025 -> 2.015, 0.010 -> 2.414, 0.005 -> 2.692, 0.001 -> 3.286),
    45 -> SortedMap(0.100 -> 1.301, 0.050 -> 1.679, 0.025 -> 2.014, 0.010 -> 2.412, 0.005 -> 2.690, 0.001 -> 3.281),
    46 -> SortedMap(0.100 -> 1.300, 0.050 -> 1.679, 0.025 -> 2.013, 0.010 -> 2.410, 0.005 -> 2.687, 0.001 -> 3.277),
    47 -> SortedMap(0.100 -> 1.300, 0.050 -> 1.678, 0.025 -> 2.012, 0.010 -> 2.408, 0.005 -> 2.685, 0.001 -> 3.273),
    48 -> SortedMap(0.100 -> 1.299, 0.050 -> 1.677, 0.025 -> 2.011, 0.010 -> 2.407, 0.005 -> 2.682, 0.001 -> 3.269),
    49 -> SortedMap(0.100 -> 1.299, 0.050 -> 1.677, 0.025 -> 2.010, 0.010 -> 2.405, 0.005 -> 2.680, 0.001 -> 3.265),
    50 -> SortedMap(0.100 -> 1.299, 0.050 -> 1.676, 0.025 -> 2.009, 0.010 -> 2.403, 0.005 -> 2.678, 0.001 -> 3.261),
    51 -> SortedMap(0.100 -> 1.298, 0.050 -> 1.675, 0.025 -> 2.008, 0.010 -> 2.402, 0.005 -> 2.676, 0.001 -> 3.258),
    52 -> SortedMap(0.100 -> 1.298, 0.050 -> 1.675, 0.025 -> 2.007, 0.010 -> 2.400, 0.005 -> 2.674, 0.001 -> 3.255),
    53 -> SortedMap(0.100 -> 1.298, 0.050 -> 1.674, 0.025 -> 2.006, 0.010 -> 2.399, 0.005 -> 2.672, 0.001 -> 3.251),
    54 -> SortedMap(0.100 -> 1.297, 0.050 -> 1.674, 0.025 -> 2.005, 0.010 -> 2.397, 0.005 -> 2.670, 0.001 -> 3.248),
    55 -> SortedMap(0.100 -> 1.297, 0.050 -> 1.673, 0.025 -> 2.004, 0.010 -> 2.396, 0.005 -> 2.668, 0.001 -> 3.245),
    56 -> SortedMap(0.100 -> 1.297, 0.050 -> 1.673, 0.025 -> 2.003, 0.010 -> 2.395, 0.005 -> 2.667, 0.001 -> 3.242),
    57 -> SortedMap(0.100 -> 1.297, 0.050 -> 1.672, 0.025 -> 2.002, 0.010 -> 2.394, 0.005 -> 2.665, 0.001 -> 3.239),
    58 -> SortedMap(0.100 -> 1.296, 0.050 -> 1.672, 0.025 -> 2.002, 0.010 -> 2.392, 0.005 -> 2.663, 0.001 -> 3.237),
    59 -> SortedMap(0.100 -> 1.296, 0.050 -> 1.671, 0.025 -> 2.001, 0.010 -> 2.391, 0.005 -> 2.662, 0.001 -> 3.234),
    60 -> SortedMap(0.100 -> 1.296, 0.050 -> 1.671, 0.025 -> 2.000, 0.010 -> 2.390, 0.005 -> 2.660, 0.001 -> 3.232),
    61 -> SortedMap(0.100 -> 1.296, 0.050 -> 1.670, 0.025 -> 2.000, 0.010 -> 2.389, 0.005 -> 2.659, 0.001 -> 3.229),
    62 -> SortedMap(0.100 -> 1.295, 0.050 -> 1.670, 0.025 -> 1.999, 0.010 -> 2.388, 0.005 -> 2.657, 0.001 -> 3.227),
    63 -> SortedMap(0.100 -> 1.295, 0.050 -> 1.669, 0.025 -> 1.998, 0.010 -> 2.387, 0.005 -> 2.656, 0.001 -> 3.225),
    64 -> SortedMap(0.100 -> 1.295, 0.050 -> 1.669, 0.025 -> 1.998, 0.010 -> 2.386, 0.005 -> 2.655, 0.001 -> 3.223),
    65 -> SortedMap(0.100 -> 1.295, 0.050 -> 1.669, 0.025 -> 1.997, 0.010 -> 2.385, 0.005 -> 2.654, 0.001 -> 3.220),
    66 -> SortedMap(0.100 -> 1.295, 0.050 -> 1.668, 0.025 -> 1.997, 0.010 -> 2.384, 0.005 -> 2.652, 0.001 -> 3.218),
    67 -> SortedMap(0.100 -> 1.294, 0.050 -> 1.668, 0.025 -> 1.996, 0.010 -> 2.383, 0.005 -> 2.651, 0.001 -> 3.216),
    68 -> SortedMap(0.100 -> 1.294, 0.050 -> 1.668, 0.025 -> 1.995, 0.010 -> 2.382, 0.005 -> 2.650, 0.001 -> 3.214),
    69 -> SortedMap(0.100 -> 1.294, 0.050 -> 1.667, 0.025 -> 1.995, 0.010 -> 2.382, 0.005 -> 2.649, 0.001 -> 3.213),
    70 -> SortedMap(0.100 -> 1.294, 0.050 -> 1.667, 0.025 -> 1.994, 0.010 -> 2.381, 0.005 -> 2.648, 0.001 -> 3.211),
    71 -> SortedMap(0.100 -> 1.294, 0.050 -> 1.667, 0.025 -> 1.994, 0.010 -> 2.380, 0.005 -> 2.647, 0.001 -> 3.209),
    72 -> SortedMap(0.100 -> 1.293, 0.050 -> 1.666, 0.025 -> 1.993, 0.010 -> 2.379, 0.005 -> 2.646, 0.001 -> 3.207),
    73 -> SortedMap(0.100 -> 1.293, 0.050 -> 1.666, 0.025 -> 1.993, 0.010 -> 2.379, 0.005 -> 2.645, 0.001 -> 3.206),
    74 -> SortedMap(0.100 -> 1.293, 0.050 -> 1.666, 0.025 -> 1.993, 0.010 -> 2.378, 0.005 -> 2.644, 0.001 -> 3.204),
    75 -> SortedMap(0.100 -> 1.293, 0.050 -> 1.665, 0.025 -> 1.992, 0.010 -> 2.377, 0.005 -> 2.643, 0.001 -> 3.202),
    76 -> SortedMap(0.100 -> 1.293, 0.050 -> 1.665, 0.025 -> 1.992, 0.010 -> 2.376, 0.005 -> 2.642, 0.001 -> 3.201),
    77 -> SortedMap(0.100 -> 1.293, 0.050 -> 1.665, 0.025 -> 1.991, 0.010 -> 2.376, 0.005 -> 2.641, 0.001 -> 3.199),
    78 -> SortedMap(0.100 -> 1.292, 0.050 -> 1.665, 0.025 -> 1.991, 0.010 -> 2.375, 0.005 -> 2.640, 0.001 -> 3.198),
    79 -> SortedMap(0.100 -> 1.292, 0.050 -> 1.664, 0.025 -> 1.990, 0.010 -> 2.374, 0.005 -> 2.640, 0.001 -> 3.197),
    80 -> SortedMap(0.100 -> 1.292, 0.050 -> 1.664, 0.025 -> 1.990, 0.010 -> 2.374, 0.005 -> 2.639, 0.001 -> 3.195),
    81 -> SortedMap(0.100 -> 1.292, 0.050 -> 1.664, 0.025 -> 1.990, 0.010 -> 2.373, 0.005 -> 2.638, 0.001 -> 3.194),
    82 -> SortedMap(0.100 -> 1.292, 0.050 -> 1.664, 0.025 -> 1.989, 0.010 -> 2.373, 0.005 -> 2.637, 0.001 -> 3.193),
    83 -> SortedMap(0.100 -> 1.292, 0.050 -> 1.663, 0.025 -> 1.989, 0.010 -> 2.372, 0.005 -> 2.636, 0.001 -> 3.191),
    84 -> SortedMap(0.100 -> 1.292, 0.050 -> 1.663, 0.025 -> 1.989, 0.010 -> 2.372, 0.005 -> 2.636, 0.001 -> 3.190),
    85 -> SortedMap(0.100 -> 1.292, 0.050 -> 1.663, 0.025 -> 1.988, 0.010 -> 2.371, 0.005 -> 2.635, 0.001 -> 3.189),
    86 -> SortedMap(0.100 -> 1.291, 0.050 -> 1.663, 0.025 -> 1.988, 0.010 -> 2.370, 0.005 -> 2.634, 0.001 -> 3.188),
    87 -> SortedMap(0.100 -> 1.291, 0.050 -> 1.663, 0.025 -> 1.988, 0.010 -> 2.370, 0.005 -> 2.634, 0.001 -> 3.187),
    88 -> SortedMap(0.100 -> 1.291, 0.050 -> 1.662, 0.025 -> 1.987, 0.010 -> 2.369, 0.005 -> 2.633, 0.001 -> 3.185),
    89 -> SortedMap(0.100 -> 1.291, 0.050 -> 1.662, 0.025 -> 1.987, 0.010 -> 2.369, 0.005 -> 2.632, 0.001 -> 3.184),
    90 -> SortedMap(0.100 -> 1.291, 0.050 -> 1.662, 0.025 -> 1.987, 0.010 -> 2.368, 0.005 -> 2.632, 0.001 -> 3.183),
    91 -> SortedMap(0.100 -> 1.291, 0.050 -> 1.662, 0.025 -> 1.986, 0.010 -> 2.368, 0.005 -> 2.631, 0.001 -> 3.182),
    92 -> SortedMap(0.100 -> 1.291, 0.050 -> 1.662, 0.025 -> 1.986, 0.010 -> 2.368, 0.005 -> 2.630, 0.001 -> 3.181),
    93 -> SortedMap(0.100 -> 1.291, 0.050 -> 1.661, 0.025 -> 1.986, 0.010 -> 2.367, 0.005 -> 2.630, 0.001 -> 3.180),
    94 -> SortedMap(0.100 -> 1.291, 0.050 -> 1.661, 0.025 -> 1.986, 0.010 -> 2.367, 0.005 -> 2.629, 0.001 -> 3.179),
    95 -> SortedMap(0.100 -> 1.291, 0.050 -> 1.661, 0.025 -> 1.985, 0.010 -> 2.366, 0.005 -> 2.629, 0.001 -> 3.178),
    96 -> SortedMap(0.100 -> 1.290, 0.050 -> 1.661, 0.025 -> 1.985, 0.010 -> 2.366, 0.005 -> 2.628, 0.001 -> 3.177),
    97 -> SortedMap(0.100 -> 1.290, 0.050 -> 1.661, 0.025 -> 1.985, 0.010 -> 2.365, 0.005 -> 2.627, 0.001 -> 3.176),
    98 -> SortedMap(0.100 -> 1.290, 0.050 -> 1.661, 0.025 -> 1.984, 0.010 -> 2.365, 0.005 -> 2.627, 0.001 -> 3.175),
    99 -> SortedMap(0.100 -> 1.290, 0.050 -> 1.660, 0.025 -> 1.984, 0.010 -> 2.365, 0.005 -> 2.626, 0.001 -> 3.175),
    100-> SortedMap(0.100 -> 1.290, 0.050 -> 1.660, 0.025 -> 1.984, 0.010 -> 2.364, 0.005 -> 2.626, 0.001 -> 3.174),
    120-> SortedMap(0.100 -> 1.289, 0.050 -> 1.658, 0.025 -> 1.980, 0.010 -> 2.358, 0.005 -> 2.617, 0.001 -> 3.160),
    240-> SortedMap(0.100 -> 1.285, 0.050 -> 1.651, 0.025 -> 1.970, 0.010 -> 2.342, 0.005 -> 2.596, 0.001 -> 3.125),
    1000->SortedMap(0.100 -> 1.282, 0.050 -> 1.645, 0.025 -> 1.196, 0.010 -> 2.326, 0.005 -> 2.576, 0.001 -> 3.090)
  )

  /** Devuelve el Tc (crítico) a partir de los grados de libertad y α*/
  private def tIndex(n: Int, α: Double): Double = {
    val N = scala.math.abs(n)
    val A = if (scala.math.abs(α) <= 1) scala.math.abs(α)
            else scala.math.abs(α) % scala.math.abs(α).toInt //Dejo los decimales únicamente (es un check)

    distribution.filterKeys(gl => gl <= N).last._2.  //gl = grados de libertad
                 filterKeys(a => a <= A).last._2     // a = significatividad
  }
}
